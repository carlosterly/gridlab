@import "../framework/framework.scss";

// Only import the weights and styles you actually use (200, 400, 700)
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@200;400;700&display=swap");

/* @link https://utopia.fyi/type/calculator?c=320,18,1.2,1240,20,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

:root {
  --sans-serif: "Inter", serif;
  --brand-colour: #994f8e;

  --step--2: clamp(0.5556rem, 0.8598rem + -0.3925vw, 0.7813rem);
  --step--1: clamp(0.8333rem, 0.9737rem + -0.1812vw, 0.9375rem);
  --step-0: clamp(1.125rem, 1.0815rem + 0.2174vw, 1.25rem);
  --step-1: clamp(1.35rem, 1.1674rem + 0.913vw, 1.875rem);
  --step-2: clamp(1.62rem, 1.2052rem + 2.0739vw, 2.8125rem);
  --step-3: clamp(1.944rem, 1.1528rem + 3.9561vw, 4.2188rem);
  --step-4: clamp(2.3328rem, 0.9431rem + 6.9484vw, 6.3281rem);
  --step-5: clamp(2.7994rem, 0.4714rem + 11.6397vw, 9.4922rem);

  --space-3xs: clamp(0.3125rem, 0.3125rem + 0vw, 0.3125rem);
  --space-2xs: clamp(0.5625rem, 0.5408rem + 0.1087vw, 0.625rem);
  --space-xs: clamp(0.875rem, 0.8533rem + 0.1087vw, 0.9375rem);
  --space-s: clamp(1.125rem, 1.0815rem + 0.2174vw, 1.25rem);
  --space-m: clamp(1.6875rem, 1.6223rem + 0.3261vw, 1.875rem);
  --space-l: clamp(2.25rem, 2.163rem + 0.4348vw, 2.5rem);
  --space-xl: clamp(3.375rem, 3.2446rem + 0.6522vw, 3.75rem);
  --space-2xl: clamp(4.5rem, 4.3261rem + 0.8696vw, 5rem);
  --space-3xl: clamp(6.75rem, 6.4891rem + 1.3043vw, 7.5rem);

  /* One-up pairs */
  --space-3xs-2xs: clamp(0.3125rem, 0.2038rem + 0.5435vw, 0.625rem);
  --space-2xs-xs: clamp(0.5625rem, 0.4321rem + 0.6522vw, 0.9375rem);
  --space-xs-s: clamp(0.875rem, 0.7446rem + 0.6522vw, 1.25rem);
  --space-s-m: clamp(1.125rem, 0.8641rem + 1.3043vw, 1.875rem);
  --space-m-l: clamp(1.6875rem, 1.4049rem + 1.413vw, 2.5rem);
  --space-l-xl: clamp(2.25rem, 1.7283rem + 2.6087vw, 3.75rem);
  --space-xl-2xl: clamp(3.375rem, 2.8098rem + 2.8261vw, 5rem);
  --space-2xl-3xl: clamp(4.5rem, 3.4565rem + 5.2174vw, 7.5rem);

  /* Custom pairs */
  --space-s-l: clamp(1.125rem, 0.6467rem + 2.3913vw, 2.5rem);
}

// =============================
// Placeholders for Repeated Styles
// =============================

%headline {
  color: var(--brand-colour);
  text-transform: uppercase;
  text-align: center;
  margin: 0;
  padding: 0;
  line-height: 0.85;
}

%byline {
  font-size: var(--step-0);
  font-weight: 200;
  margin-block: var(--space-s);
  padding: 0;
}

%folio {
  margin: var(--space-s);
  font-size: var(--step-0);
  font-weight: 200;
}

// --Layout Styles

body {
  font-family: var(--sans-serif);
  margin-block: 0;
  margin-inline: 0;
}

p {
  margin-block: var(--space-m);
  margin-inline: 0;
}

.folio {
  @extend %folio;
  padding-inline: var(--space-s);

  ul {
    margin: 0;
    padding: 0;
    display: flex;
    flex-flow: row nowrap;

    & li {
      list-style: none;
      flex: 1;

      & span {
        float: inline-end;
      }
    }
  }
}

.body-header {
  margin: var(--space-s-l);
}

.body-layout {
  @include media(">size-lg") {
    margin: var(--space-s);

    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    gap: var(--space-m-l);
    align-items: center;

    & div:has(picture) {
      display: grid;
      grid-template-columns: subgrid;
      grid-template-rows: subgrid;
    }

    picture {
      grid-column: 1 / -1;
      grid-row: 1 / -1;
      width: 100%;
      height: 100%;
      display: flex;
      & img {
        height: auto;
        width: 100%;
        object-fit: cover;
        object-position: center top;
      }
    }
  }
}
.headline-base {
  @extend %headline;
}
.headline-gradient {
  background: linear-gradient(to right, #994f8e 0%, #00394d 100%);
  -webkit-text-fill-color: transparent;
  background-clip: text;

  @include media(">size-md") {
    background:
      url(https://res.cloudinary.com/liquidweb/image/upload/v1748858899/grid/plum/concrete-wall-2.webp) center center
        fixed,
      linear-gradient(to right, #994f8e 0%, #00394d 100%);
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
}
.byline {
  @extend %byline;
}
ul li span.edition {
  display: none;

  @include media(">size-md") {
    display: block;
  }
}

// Modified version of:
// https://piccalil.li/blog/riffing-on-the-latest-css-fit-text-approach/
// https://kizu.dev/fit-to-width-text/

.container-fill-text {
  --container-fill-text-captured-length: initial;

  display: flex;
  container-type: inline-size;

  /* Overrides a global style on headings */
  max-inline-size: unset;
}

.container-fill-text__reference {
  visibility: hidden;
}

.container-fill-text__container {
  --container-fill-text-captured-length: 100cqi;
  --container-fill-text-available-space: var(--container-fill-text-captured-length);

  flex-grow: 1;
  container-type: inline-size;
}

.container-fill-text__display {
  --container-fill-text-captured-length: 100cqi;
  --container-fill-text-ratio: tan(
    atan2(
      var(--container-fill-text-available-space),
      var(--container-fill-text-available-space) - var(--container-fill-text-captured-length)
    )
  );

  display: block;

  /* AKA, width */
  inline-size: var(--container-fill-text-available-space);

  /* Apply the calculated size with sensible fallbacks for no support */
  font-size: var(--step-5);

  /* The initial fallback value for no support now becomes our minimum clamp value */
  font-size: clamp(
    var(--step-5),
    1em * var(--container-fill-text-ratio),
    var(--container-fill-text-max-font-size, calc(infinity * 1px))
  );

  @include trim-capital;
}

@property --container-fill-text-captured-length {
  syntax: "<length>";
  initial-value: 0px;
  inherits: true;
}
